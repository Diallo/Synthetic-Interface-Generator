import "{{output_file}}.interface"

Project NewProject {
	Type Mappings {
		typeMappings {
			int -> "int32"
			real -> "double"		
		}
	}

	Generate UML {
		umlTask for interface {{output_file}}
	}
	
	Generate Petri-net {
		PNet for interface {{output_file}}
	}

	Generate Dynamics Open Net {
		openNetTask for interface {{output_file}} {
			pnet-task: PNet
			stub-task: stubTask 
		}
	}
	
	Generate Dynamics stubs {
		stubTask for interface {{output_file}} {
			client-params-file-name: "ip.params"
			web-client: OFF
			open-net-task: openNetTask
			o2n-namespace: "tno.dynamics"
		}
	}

	Generate Reachability-Graph {

             ReachabilityGraph for interface {{output_file}} // Provide Petri net generation task OR interface-name OR *.pnet file.

             {

                    parameters file: "ip.params" // Provide input parameters file.

                    compile-and-generate // Compiles and generates reachability graph as part of ComMA workflow

                    generate-validation-report // Generates report about property checks such as Deadlocks, Race Conditions, Coverage etc.

                    // max-search-depth: 5 // The depth up to which the walker must search. Default value is 5.

                    // Default path to bin folder of a JDK 1.8 (update 181) installation

                    jdk-bin-install-path: "/usr/bin/java" // Check path to bin folder of your JDK installation!

             }

       }

      
}